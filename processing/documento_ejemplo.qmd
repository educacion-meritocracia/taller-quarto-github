---
title: "Análisis de datos"
subtitle: "Taller Introducción a Quarto y Github"
author: "Equipo EDUMER"
date: today
lang: en
fontsize: 12pt
format:
  html:
    code-copy: true
    code-tools: true
    toc: true
    toc-location: right
    toc-depth: 4
    toc-expand: 2
    toc-title: Contents
    number-sections: true
    number-depth: 4
    theme:
      - cosmo
    title-block-banner: true
  pdf:
    number-sections: true
    number-depth: 3
editor_options: 
  chunk_output_type: console
bibliography: "../input/bib/merit-factorial.bib"
csl: "../input/bib/apa6.csl"
link-citations: true
---

# Presentación

Este documento de ejemplo presenta el código empleado para un análisis de datos en el marco del taller de Introducción a Quarto y Github por parte del equipo del [Proyecto Fondecyt EDUMER](https://github.com/educacion-meritocracia). El objetivo del análisis es evaluar un modelo de medición sobre percepciones y preferencias sobre meritocracia. El conjunto de datos utilizado, `db_long_proc.RData`, proviene de una fuente que fue procesada previamente.


```{r}
#| label: set
#| echo: false
#| message: false
#| warning: false

library(knitr)
knitr::opts_chunk$set(echo = TRUE, include = TRUE, warning = FALSE, message = FALSE)

table_format <- if(is_html_output()) {
  "html"
} else if(is_latex_output()) {
  "latex"
}
table_format2 <- if(is_html_output()) {
  T
} else if(is_latex_output()) {
  F
}

options(kableExtra.html.bsTable = T)
options(knitr.kable.NA = "")
```

# Librerías

En primer lugar, cargamos las librerías necesarias. En este caso, utilizamos `pacman::p_load` para cargar y llamar a las librerías en un solo movimiento. 

```{r}
#| label: libraries

if (! require("pacman")) install.packages("pacman")

pacman::p_load(tidyverse,
               sjmisc, 
               lavaan,
               psych,
               corrplot,
               ggdist,
               patchwork,
               sjlabelled,
               semTools,
               gtools,
               RColorBrewer,
               skimr)

options(scipen=999)
rm(list = ls())

```

# Datos

Segundo, cargamos nuestra base de datos previamente procesada llamada `db_proc.RData` que se encuentra alojada en la ruta: **output > data**.

```{r}
#| label: data
#| echo: true

load(file = "../output/data/db_proc.RData")

glimpse(db_proc)

```

Contamos con `r dim(db_proc)[1]` casos o filas y con `r dim(db_proc)[2]` variables o columnas.

# Análisis

En esta sección se muestran los análisis estadísticos. Primero, se realizan análisis descriptivos uni y bivariados. Luego, se hace un análisis factorial confirmatorio (CFA) [@brown_confirmatory_2015] para ajustar un modelo de medición sobre percepciones y preferencias sobre meritocracia y no meritocracia propuesto por Castillo et al. [-@castillo_multidimensional_2023]. 

Los siguientes criterios de ajuste, tomados de Brown [-@brown_confirmatory_2015] y Kline [-@kline_principles_2023], orientan la evaluación de la adecuación del modelo:

- Chi-square: $p$>0.05
- Chi-square ratio $(\chi^2/df)$: < 3
- Comparative Fit Index (CFI): > 0.95
- Tucker–Lewis Index (TLI): > 0.95
- Root Mean Square Error of Approximation (RMSEA): < 0.06
- Standardized Root Mean Square Residual (SRMR): < 0.08 
- Akaike Information Criterion (AIC): no fixed cutoff; lower values indicate better fit.

## Descriptivos


### Univariados

Los estadísticos descriptivos para las variables de interés se muestran en la @tbl-summary. 

```{r}
#| label: tbl-summary
#| tbl-cap: "Estadísticos descriptivos"
#| tbl-cap-location: top

t1 <- db_proc %>% 
  select(-c(1:3)) %>% 
  skim() %>% 
  yank("numeric") %>% 
  as_tibble() %>% 
  mutate(range = paste0("(",p0,"-",p100,")")) %>% 
  mutate_if(.predicate = is.numeric, .funs = ~ round(.,2)) %>% 
  select("Variable" = skim_variable,"Mean"= mean, "SD"=sd, "Range" = range, "Histogram"=hist) 

t1 %>% 
  kableExtra::kable(format = "markdown")
```
En la @fig-likert se muestra la distribución de las respuestas para los items de percepciones y preferencias meritocráticas y no meritocráticas.

```{r}
#| label: fig-likert
#| fig-cap-location: top
#| fig-cap: "Distribución de respuestas en items sobre percepciones y preferencias por meritocracia"
#| out-width: '80%'

theme_set(theme_ggdist())
colors <- RColorBrewer::brewer.pal(n = 4, name = "RdBu")

a <- db_proc %>%
  select(starts_with("perc")) %>% 
  sjPlot::plot_likert(geom.colors = colors,
                      title = c("a. Percepciones"),
                      geom.size = 0.8,
                      axis.labels = c("Esfuerzo", "Talento", "Padres ricos", "Contactos"),
                      catcount = 4,
                      values  =  "sum.outside",
                      reverse.colors = F,
                      reverse.scale = T,
                      show.n = FALSE,
                      show.prc.sign = T
                      ) +
  ggplot2::theme(legend.position = "none")

b <- db_proc %>% 
  select(starts_with("pref")) %>% 
  sjPlot::plot_likert(geom.colors = colors,
                      title = c("b. Preferencias"),
                      geom.size = 0.8,
                     axis.labels = c("Esfuerzo", "Talento", "Padres ricos", "Contactos"),
                      catcount = 4,
                      values  =  "sum.outside",
                      reverse.colors = F,
                      reverse.scale = T,
                      show.n = FALSE,
                      show.prc.sign = T
  ) +
  ggplot2::theme(legend.position = "bottom")

likerplot <- a / b + plot_annotation(caption = paste0("Fuente: Elaboración propia en base a Encuesta Panel EDUMER Ola 1"," (n = ",dim(db_proc)[1],")"
))

likerplot


```

### Bivariados

Respecto a la asociación entre variables, en la @fig-correlaciones se muestra la matriz de correlaciones para las variables de interés. 

```{r}
#| label: fig-correlaciones
#| fig-cap: "Matriz de correlaciones"
#| fig-cap-location: top
#| out-width: '80%'

M <- psych::polychoric(db_proc[,c(4:11,15)])

P <- cor(db_proc[,c(4:11,15)], method = "pearson")

diag(M$rho) <- NA

diag(P) <- NA

M$rho[9,] <- P[9,]

rownames(M$rho) <- c("A. Percepción Esfuerzo",
                     "B. Percepción Talento",
                     "C. Percepción Padres Ricos",
                     "D. Percepción Contactos",
                     "E. Preferencias Esfuerzo",
                     "F. Preferencias Talento",
                     "G. Preferencias Padres Ricos",
                     "H. Preferencias Contactos",
                     "I. Market Justice Preferences")

#set Column names of the matrix
colnames(M$rho) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
                       "(H)","(I)")

rownames(P) <- c("A. Percepción Esfuerzo",
                     "B. Percepción Talento",
                     "C. Percepción Padres Ricos",
                     "D. Percepción Contactos",
                     "E. Preferencias Esfuerzo",
                     "F. Preferencias Talento",
                     "G. Preferencias Padres Ricos",
                     "H. Preferencias Contactos",
                     "I. Market Justice Preferences")

#set Column names of the matrix
colnames(P) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
                    "(H)","(I)")

testp <- cor.mtest(M$rho, conf.level = 0.95)

#Plot the matrix using corrplot
corrplot::corrplot(M$rho,
                   method = "color",
                   addCoef.col = "black",
                   type = "upper",
                   tl.col = "black",
                   col = colorRampPalette(c("#E16462", "white", "#0D0887"))(12),
                   bg = "white",
                   na.label = "-") 


```


## Multivariados

### Análisis Factorial Confirmatorio

En primer lugar, realizamos un test de Mardia para evaluar normalidad multivariante de los items.

```{r}
#| label: fig-mardia
#| fig-cap: "Test de mardia para items escala meritocracia"
#| fig-cap-location: top
#| fig-asp: 1.1
#| out-width: '70%'
#| results: asis

mardia(db_proc[,c("perc_effort", "perc_talent", "perc_rich_parents", "perc_contact", "pref_effort", "pref_talent", "pref_rich_parents", "pref_contact")], 
       na.rm = T, plot=T) 
```

Ahora, especificamos la estructura factorial de los ítems y, a continuación, ajustamos los modelos utilizando un estimador DWLS. 

```{r}
# model
model_cfa <- '
  perc_merit = ~ perc_effort + perc_talent
  perc_nmerit = ~ perc_rich_parents + perc_contact
  pref_merit = ~ pref_effort + pref_talent
  pref_nmerit = ~ pref_rich_parents + pref_contact
  '

# estimation 
m1_cfa <- cfa(model = model_cfa, 
              data = db_proc,
              estimator = "DWLS",
              ordered = T,
              std.lv = F) 

```

Las cargas factoriales y los indicadores de la bondad del ajuste se presentan en las tablas @tbl-cargas y @tbl-fit, respectivamente.

```{r}
#| label: tbl-cargas
#| tbl-cap: "Cargas factoriales"
#| tbl-cap-location: top

sum_loadings <- standardizedSolution(m1_cfa) %>%
    dplyr::filter(op == "=~") %>%
    dplyr::select(lhs, rhs, est.std) %>%
    rename(
      Factor   = lhs,
      Indicator = rhs,
      Loading  = est.std
    )

sum_loadings %>%
    kableExtra::kable(
      format    = "markdown",
      digits    = 3,
      booktabs  = TRUE,
      col.names = c("Factor", "Indicator", "Loading"),
      caption   = NULL
    ) %>%
    kableExtra::kable_styling(
      full_width        = FALSE,
      font_size         = 11,
      latex_options     = "HOLD_position",
      bootstrap_options = c("striped", "bordered")
    )
 
```


```{r}
#| label: tbl-fit
#| tbl-cap: "Indicadores de bondad de ajuste"
#| tbl-cap-location: top

colnames_fit  <- c("$N$","Estimator","$\\chi^2$ (df)","CFI","TLI","RMSEA 90% CI [Lower-Upper]")
 
sum_fit <- fitmeasures(m1_cfa, output = "matrix")[c("chisq","pvalue","df","cfi","tli",
                                                     "rmsea","rmsea.ci.lower","rmsea.ci.upper"),]
sum_fit$nobs <- nobs(m1_cfa)
sum_fit$est  <- summary(m1_cfa)$optim$estimator
sum_fit <- data.frame(sum_fit) %>%
      dplyr::mutate(
        dplyr::across(
          .cols = c(cfi, tli, rmsea, rmsea.ci.lower, rmsea.ci.upper),
          .fns  = ~ round(., 3)
        ),
        stars   = gtools::stars.pval(pvalue),
        chisq   = paste0(round(chisq,3), " (", df, ") ", stars),
        rmsea.ci= paste0(rmsea, " [", rmsea.ci.lower, "-", rmsea.ci.upper, "]")
      ) %>%
      dplyr::select(nobs, est, chisq, cfi, tli, rmsea.ci)


sum_fit %>%
    kableExtra::kable(
      format     = "markdown", 
      digits     = 3,
      booktabs   = TRUE,
      col.names  = colnames_fit,
      caption    = NULL
    ) %>%
    kableExtra::kable_styling(
      full_width        = TRUE,
      font_size         = 11,
      latex_options     = "HOLD_position",
      bootstrap_options = c("striped", "bordered")
    )
```

Siguiendo los criterios propuestos por Brown [-@brown_confirmatory_2015], el modelo presenta un buen ajuste.


# Referencias

::: {#refs}
:::


