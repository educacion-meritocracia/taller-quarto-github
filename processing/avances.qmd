---
title: "Medición de percepciones y preferencias sobre meritocracia en etapa escolar en Chile"
subtitle: "Análisis de datos"
author: "Andreas Laffert, Asistente de Investigación"
date: today
lang: es
fontsize: 14pt
format:
  html:
    toc: true
    toc-location: left
    toc-depth: 2
    toc-expand: 2
    toc-title: Contenidos
    number-sections: true
    number-depth: 3
    theme:
      - cosmo
      - edumer.scss
    code-link: true
    title-block-banner: true
editor_options: 
  chunk_output_type: console
---

<style>
.logo {
    position: absolute;
    top: 20px;
    right: 30px;
}
</style>

<img class="logo" src="edumer.png" width="250" height="190">

<div style="text-align: justify">


```{r}
#| label: set
#| echo: false
#| message: false
#| warning: false

library(knitr)
knitr::opts_chunk$set(echo = TRUE, include = TRUE, warning = FALSE, message = FALSE)

table_format <- if(is_html_output()) {
  "html"
} else if(is_latex_output()) {
  "latex"
}
table_format2 <- if(is_html_output()) {
  T
} else if(is_latex_output()) {
  F
}

options(kableExtra.html.bsTable = T)
options(knitr.kable.NA = "")
```


# Librerías

```{r}
#| label: packages
#| include: false

if (! require("pacman")) install.packages("pacman")

pacman::p_load(tidyverse,
               sjmisc, 
               sjPlot,
               here,
               lavaan,
               psych,
               corrplot,
               ggdist,
               patchwork,
               sjlabelled,
               semTools,
               gtools,
               RColorBrewer,
               skimr,
               readxl)


options(scipen=999)
rm(list = ls())
```

# Datos

```{r}
#| label: data
#| echo: true
#| output: false

load(file = here("output", "data", "db_long_proc.RData"))


names(db_long)
glimpse(db_long)

```



# Analísis


## Descriptivos

```{r}
#| label: tbl-summary
#| tbl-cap: "Estadísticos descriptivos"
#| tbl-cap-location: top

t1 <- db_long %>% 
  filter(ola == 1) %>% 
  select(-c(1:3)) %>% 
  skim() %>% 
  yank("numeric") %>% 
  as_tibble() %>% 
  mutate(range = paste0("(",p0,"-",p100,")")) %>% 
  mutate_if(.predicate = is.numeric, .funs = ~ round(.,2)) %>% 
  select("Variable" = skim_variable,"Mean"= mean, "SD"=sd, "Range" = range, "Histogram"=hist) 

t1 %>% 
  kableExtra::kable(format = "markdown")
```


```{r}
#| label: fig-likert

theme_set(theme_ggdist())
colors <- RColorBrewer::brewer.pal(n = 4, name = "RdBu")

a <- db_long %>% 
  filter(ola == 1) %>%
  select(starts_with("perc")) %>% 
  sjPlot::plot_likert(geom.colors = colors,
                      title = c("a. Percepciones"),
                      geom.size = 0.8,
                      axis.labels = c("Esfuerzo", "Talento", "Padres ricos", "Contactos"),
                      catcount = 4,
                      values  =  "sum.outside",
                      reverse.colors = F,
                      reverse.scale = T,
                      show.n = FALSE,
                      show.prc.sign = T
                      ) +
  ggplot2::theme(legend.position = "none")

b <- db_long %>% 
  filter(ola == 1) %>% 
  select(starts_with("pref")) %>% 
  sjPlot::plot_likert(geom.colors = colors,
                      title = c("b. Preferencias"),
                      geom.size = 0.8,
                     axis.labels = c("Esfuerzo", "Talento", "Padres ricos", "Contactos"),
                      catcount = 4,
                      values  =  "sum.outside",
                      reverse.colors = F,
                      reverse.scale = T,
                      show.n = FALSE,
                      show.prc.sign = T
  ) +
  ggplot2::theme(legend.position = "bottom")

likerplot <- a / b + plot_annotation(caption = paste0("Fuente: Elaboración propia en base a Encuesta Panel EDUMER Ola 1"," (n = ",dim(db_long[db_long$ola==1,])[1],")"
))

likerplot


```


## Bivariados

```{r}
#| label: fig-correlaciones

M <- psych::polychoric(db_long[db_long$ola==1,][c(4:11,15)])

P <- cor(db_long[db_long$ola==1,][c(4:11,15)], method = "pearson")

diag(M$rho) <- NA

diag(P) <- NA

M$rho[9,] <- P[9,]

rownames(M$rho) <- c("A. Percepción Esfuerzo",
                     "B. Percepción Talento",
                     "C. Percepción Padres Ricos",
                     "D. Percepción Contactos",
                     "E. Preferencias Esfuerzo",
                     "F. Preferencias Talento",
                     "G. Preferencias Padres Ricos",
                     "H. Preferencias Contactos",
                     "I. Market Justice Preferences")

#set Column names of the matrix
colnames(M$rho) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
                       "(H)","(I)")

rownames(P) <- c("A. Percepción Esfuerzo",
                     "B. Percepción Talento",
                     "C. Percepción Padres Ricos",
                     "D. Percepción Contactos",
                     "E. Preferencias Esfuerzo",
                     "F. Preferencias Talento",
                     "G. Preferencias Padres Ricos",
                     "H. Preferencias Contactos",
                     "I. Market Justice Preferences")

#set Column names of the matrix
colnames(P) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
                    "(H)","(I)")

testp <- cor.mtest(M$rho, conf.level = 0.95)

#Plot the matrix using corrplot
corrplot::corrplot(M$rho,
                   method = "color",
                   addCoef.col = "black",
                   type = "upper",
                   tl.col = "black",
                   col = colorRampPalette(c("#E16462", "white", "#0D0887"))(12),
                   bg = "white",
                   na.label = "-") 


```


## Multivariados

### CFA

```{r}
# model
model_cfa <- '
  perc_merit = ~ perc_effort + perc_talent
  perc_nmerit = ~ perc_rich_parents + perc_contact
  pref_merit = ~ pref_effort + pref_talent
  pref_nmerit = ~ pref_rich_parents + pref_contact
  '

# estimation for each order set

m1_cfa <- cfa(model = model_cfa, 
              data = subset(db_long, ola == 1),
              estimator = "DWLS",
              ordered = T,
              std.lv = F) 

m2_cfa <- cfa(model = model_cfa, 
              data = subset(db_long, ola == 2), 
              estimator = "DWLS",
              ordered = T,
              std.lv = F)

summary(m1_cfa, fit.measures = T, standardized = T); summary(m2_cfa, fit.measures = T, standardized = T) 

```



```{r}
#| label: tbl-dwls
#| echo: true

left_join(
standardizedsolution(m1_cfa) %>% 
  filter(op=="=~") %>%
  select(lhs,rhs,loadings_w01=est.std,pvalue_w01=pvalue),
standardizedsolution(m2_cfa) %>% 
  filter(op=="=~") %>%
  select(lhs,rhs,loadings_w02=est.std,pvalue_w02=pvalue)
) %>% 
  mutate(
    across(
      .cols = c(pvalue_w01, pvalue_w02),
      .fns = ~ case_when(
        . < 0.05 & . > 0.01 ~ "*",
        . <= 0.01 ~ "**",
        TRUE ~ "")
    ),
    loadings_w01 = paste(round(loadings_w01, 3), pvalue_w01, sep = " "),
    loadings_w02 = paste(round(loadings_w02, 3), pvalue_w02, sep = " "),
    lhs = case_when(
      lhs == "perc_merit" ~ "Percepción meritocrática",
      lhs == "perc_nmerit" ~ "Percepción no meritocrática",
      lhs == "pref_merit" ~ "Preferencia meritocrática",
      lhs == "pref_nmerit" ~ "Preferencia no meritocrática"),
    rhs = case_when(
      rhs == "perc_effort" ~ "Percepción esfuerzo",
      rhs == "perc_talent" ~ "Percepción talento",
      rhs == "perc_rich_parents" ~ "Percepción padres ricos",
      rhs == "perc_contact" ~ "Percepción contactos",
      rhs == "pref_effort" ~ "Preferencia esfuerzo",
      rhs == "pref_talent" ~ "Preferencia talento",
      rhs == "pref_rich_parents" ~ "Preferencia padres ricos",
      rhs == "pref_contact" ~ "Preferencia contactos"),
    simbol = "=~"
  ) %>% 
  select(lhs, simbol, rhs, loadings_w01, loadings_w02) %>% 
  kableExtra::kable(format = "markdown",
                    booktabs= T, 
                    escape = F, 
                    align = 'c',
                    col.names = c("Factor", "", "Indicador", "Cargas Ola 1", "Cargas Ola 2"),
                    caption = "Cargas factoriales en ambas Olas") %>% 
  kableExtra::add_footnote(label = "** p<0.01, * p<0.5", notation = "none")

```



### SEM

```{r}
#| label: measurment-model
#| echo: true


## Especificar el modelo: medición y estructural
m_sem1 <- '
# Modelo medición
perc_merit = ~ perc_effort + perc_talent
perc_nmerit = ~ perc_rich_parents + perc_contact
pref_merit = ~ pref_effort + pref_talent
pref_nmerit = ~ pref_rich_parents + pref_contact

  # Modelo estructural
mjp ~  perc_merit + perc_nmerit + pref_merit + pref_nmerit
'

## Ajustar modelo
f_sem1 <- sem(m_sem1, data = subset(db_long, ola == 1))

## Ver resultados completos
summary(f_sem1, fit.measures = T, standardized = T)

```

### Invarianza

```{r}
#| label: tbl-invarianza
#| tbl-cap: "Resultados de invarianza de medida de grupos múltiples para PPMS"
#| results: asis
#| echo: false
#| warning: false

db_invariance <- 
  db_long %>% 
  select(id_estudiante, ola, starts_with(c("perc", "pref"))) %>% 
  pivot_wider(id_cols = id_estudiante,
              names_from = ola,
              names_glue = "{.value}{ola}",
              values_from = c(perc_effort, perc_talent,
                              perc_rich_parents, perc_contact,
                              pref_effort, pref_talent,
                              pref_rich_parents, pref_contact)) %>% 
  na.omit() %>% 
  rename_with(~str_replace_all(., "_", ""))
  


# First, define the configural model, using the repeated measures factors and
# indicators
configural_model_smt <- ("
  # Measurement model
  percmerit1 =~ perceffort1 + perctalent1
  percmerit2 =~ perceffort2 + perctalent2
  percnmerit1 =~ percrichparents1 + perccontact1
  percnmerit2 =~ percrichparents2 + perccontact2
  prefmerit1 =~ prefeffort1 + preftalent1
  prefmerit2 =~ prefeffort2 + preftalent2
  prefnmerit1 =~ prefrichparents1 + prefcontact1
  prefnmerit2 =~ prefrichparents2 + prefcontact2
")


# Second, create a named list indicating which factors are actually the same
# latent variable measured repeatedly.
longitudinal_factor_names <- list(
  comp = c("percmerit1", "percmerit2", 
           "percnmerit1", "percnmerit2",
           "prefmerit1", "prefmerit2",
           "prefnmerit1", "prefnmerit2")
)


# Configural
# Third, generate the lavaan model syntax using semTools.
configural_model_smt <- measEq.syntax(
  configural.model = configural_model_smt,
  longFacNames = longitudinal_factor_names,
  ID.fac = "std.lv",
  ID.cat = "millsap",
  data = db_invariance
)
configural_model_smt <- as.character(configural_model_smt)

# Finally, fit the model using lavaan.
configural_model_smt_fit <- sem(configural_model_smt, data = db_invariance)

# Weak
weak_model_smt <- measEq.syntax(
  configural.model = configural_model_smt,
  longFacNames = longitudinal_factor_names,
  ID.fac = "std.lv",
  ID.cat = "millsap",
  long.equal = c("loadings"),
  data = db_invariance
)
weak_model_smt <- as.character(weak_model_smt)

weak_model_smt_fit <- sem(weak_model_smt, data = db_invariance)

# Strong

strong_model_smt <- measEq.syntax(
  configural.model = configural_model_smt,
  longFacNames = longitudinal_factor_names,
  ID.fac = "std.lv",
  ID.cat = "millsap",
  long.equal = c("loadings", "lv.variances"),
  data = db_invariance
)

strong_model_smt <- as.character(strong_model_smt)

strong_model_smt_fit <- sem(strong_model_smt, data = db_invariance)


# Strict
strict_model_smt <- measEq.syntax(
  configural.model = configural_model_smt,
  longFacNames = longitudinal_factor_names,
  ID.fac = "std.lv",
  ID.cat = "millsap",
  long.equal = c("loadings", "lv.variances", "residuals"),
  data = db_invariance
)
strict_model_smt <- as.character(strict_model_smt)

strict_model_smt_fit <- sem(strict_model_smt, data = db_invariance)


# Compare ajust

tab01 <- lavTestLRT(configural_model_smt_fit, weak_model_smt_fit, strong_model_smt_fit, strict_model_smt_fit) %>%
  dplyr::as_tibble() %>%
  dplyr::select("Chisq","Df","chisq_diff"=`Chisq diff`,"df_diff"=`Df diff`,"pvalue"=`Pr(>Chisq)`) %>%
  dplyr::mutate(stars=gtools::stars.pval(pvalue),
                chisqt=paste0(round(Chisq,2)," (",Df,") "),
                decision=ifelse(pvalue>0.05,yes = "Accept",no = "Reject"),
                model=c("Configural","Weak","Strong","Strict"))


fit.meas <- dplyr::bind_rows(lavaan::fitmeasures(configural_model_smt_fit, output ="matrix")[c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper"),],
                             lavaan::fitmeasures(weak_model_smt_fit,  output ="matrix")[c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper"),],
                             lavaan::fitmeasures(strong_model_smt_fit, output ="matrix")[c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper"),],
                             lavaan::fitmeasures(strict_model_smt_fit, output ="matrix")[c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper"),])

fit.meas <- fit.meas %>%
  dplyr::mutate(diff.chi2 = chisq    - lag(chisq,default = dplyr::first(chisq)),
                diff.df   = df       - lag(df,   default = dplyr::first(df)),
                diff.cfi  = cfi      - lag(cfi,  default = dplyr::first(cfi)),
                diff.rmsea   = rmsea - lag(rmsea,default = dplyr::first(rmsea))) %>%
  round(3) %>%
  dplyr::mutate(rmsea.ci=paste0(rmsea," \n ", "(",rmsea.ci.lower,"-",rmsea.ci.upper,")"))

tab.inv <- dplyr::bind_cols(tab01,fit.meas) %>%
  dplyr::select(model,chisqt,cfi,rmsea.ci,diff.chi2,diff.df,diff.cfi,diff.rmsea,stars,decision) %>%
  dplyr::mutate(diff.chi2=paste0(diff.chi2," (",diff.df,") ",stars)) %>%
  dplyr::select(model,chisqt,cfi,rmsea.ci,diff.chi2,diff.cfi,diff.rmsea,decision)

#clean values
tab.inv[tab.inv == c("0 (0) ")] <- NA
tab.inv[tab.inv == c(0)] <- NA


col.nam <- c("Model","&chi;^2 (df)","CFI","RMSEA (90 CI)",
             "&Delta; &chi;^2 (&Delta; df)","&Delta; CFI","&Delta; RMSEA","Decision")
footnote <- paste0("N = ",configural_model_smt_fit@Data@nobs[[1]])

tab.inv %>% 
  kableExtra::kable(format = "html",
                    align = "c",
                    booktabs = T,
                    escape = F,
                    caption = NULL,
                    col.names = col.nam) %>%
  kableExtra::kable_styling(full_width = T,
                            latex_options = "hold_position",
                            bootstrap_options=c("striped", "bordered", "condensed"),
                            font_size = 23) %>%
 kableExtra::column_spec(c(1,8), width = "3.5cm") %>% 
kableExtra::column_spec(2:7, width = "4cm") %>% 
  kableExtra::column_spec(4, width = "5cm")
```

`r footnote`